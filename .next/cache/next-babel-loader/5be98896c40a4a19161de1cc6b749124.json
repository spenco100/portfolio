{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/spencerragan/vueProjects/portfolio/components/Icons/Icon.js\";\nimport React from 'react';\nimport Tooltip from './Tooltip'; // import Image from 'next/image';\n// holds a specific, given icon \n\nexport default function buildIcon(componentName, _ref) {\n  var href = _ref.href,\n      color = _ref.color,\n      label = _ref.label,\n      src = _ref.src;\n  var icon = /*#__PURE__*/React.createElement( // create element based on a string, like IoLogoVue\n  eval(componentName), {\n    color: color,\n    size: '3rem'\n  });\n\n  if (src) {\n    // if passed a source, it is a custom icon, not from react-icons\n    icon = /*#__PURE__*/React.createElement('img', {\n      src: src,\n      width: 48,\n      height: 48,\n      style: {},\n      alt: \"\".concat(label, \" icon\")\n    });\n  }\n\n  var circle = /*#__PURE__*/React.createElement( // circle around the icon\n  'div', {\n    className: \"h-14 w-14 rounded-full flex items-center justify-center bg-gray-700 shadow-md cursor-pointer \\n                  hover:shadow-lg hover:bg-gray-600 hover:shadow-lg\\n                  transition duration-500 ease-in-out transform hover:-translate-y-1 hover:scale-110\"\n  }, icon);\n  var link = /*#__PURE__*/React.createElement( // wrap everything in a link\n  'a', {\n    href: href,\n    className: \"hover:transform scale-120\",\n    target: \"_blank\"\n  }, circle);\n\n  if (!label) {\n    return link; // to return without a tooltip label\n  } else {\n    return /*#__PURE__*/_jsxDEV(Tooltip, {\n      label: label,\n      children: link\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"sources":["/Users/spencerragan/vueProjects/portfolio/components/Icons/Icon.js"],"names":["React","Tooltip","buildIcon","componentName","href","color","label","src","icon","createElement","eval","size","width","height","style","alt","circle","className","link","target"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,WAApB,C,CACA;AAEA;;AACA,eAAe,SAASC,SAAT,CAAmBC,aAAnB,QAA+D;AAAA,MAA3BC,IAA2B,QAA3BA,IAA2B;AAAA,MAArBC,KAAqB,QAArBA,KAAqB;AAAA,MAAdC,KAAc,QAAdA,KAAc;AAAA,MAAPC,GAAO,QAAPA,GAAO;AAC5E,MAAIC,IAAI,gBAAGR,KAAK,CAACS,aAAN,EAAqB;AAC9BC,EAAAA,IAAI,CAACP,aAAD,CADK,EAET;AAAEE,IAAAA,KAAK,EAALA,KAAF;AAASM,IAAAA,IAAI,EAAE;AAAf,GAFS,CAAX;;AAIA,MAAIJ,GAAJ,EAAS;AAAE;AACTC,IAAAA,IAAI,gBAAGR,KAAK,CAACS,aAAN,CACL,KADK,EAEL;AAAEF,MAAAA,GAAG,EAAHA,GAAF;AAAOK,MAAAA,KAAK,EAAE,EAAd;AAAkBC,MAAAA,MAAM,EAAE,EAA1B;AAA8BC,MAAAA,KAAK,EAAE,EAArC;AAA2CC,MAAAA,GAAG,YAAKT,KAAL;AAA9C,KAFK,CAAP;AAID;;AACD,MAAMU,MAAM,gBAAGhB,KAAK,CAACS,aAAN,EAAqB;AAClC,OADa,EAEb;AAAEQ,IAAAA,SAAS;AAAX,GAFa,EAMbT,IANa,CAAf;AAQA,MAAMU,IAAI,gBAAGlB,KAAK,CAACS,aAAN,EAAqB;AAChC,KADW,EAEX;AAAEL,IAAAA,IAAI,EAAJA,IAAF;AAAQa,IAAAA,SAAS,EAAE,2BAAnB;AAAgDE,IAAAA,MAAM,EAAE;AAAxD,GAFW,EAGXH,MAHW,CAAb;;AAKA,MAAI,CAACV,KAAL,EAAY;AACV,WAAOY,IAAP,CADU,CACG;AACd,GAFD,MAEO;AACL,wBACE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAGZ,KAAjB;AAAA,gBACIY;AADJ;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;AACF","sourcesContent":["import React from 'react';\n\nimport Tooltip from './Tooltip';\n// import Image from 'next/image';\n\n// holds a specific, given icon \nexport default function buildIcon(componentName, { href, color, label, src }) {\n  let icon = React.createElement( // create element based on a string, like IoLogoVue\n    eval(componentName),\n    { color, size: '3rem' }\n  );\n  if (src) { // if passed a source, it is a custom icon, not from react-icons\n    icon = React.createElement(\n      'img',\n      { src, width: 48, height: 48, style: {  }, alt: `${label} icon` }\n    )\n  }\n  const circle = React.createElement( // circle around the icon\n    'div',\n    { className: `h-14 w-14 rounded-full flex items-center justify-center bg-gray-700 shadow-md cursor-pointer \n                  hover:shadow-lg hover:bg-gray-600 hover:shadow-lg\n                  transition duration-500 ease-in-out transform hover:-translate-y-1 hover:scale-110`\n    },\n    icon\n  );\n  const link = React.createElement( // wrap everything in a link\n    'a',\n    { href, className: \"hover:transform scale-120\", target: \"_blank\" },\n    circle\n  );\n  if (!label) {\n    return link; // to return without a tooltip label\n  } else {\n    return (\n      <Tooltip label={ label }>\n        { link }\n      </Tooltip>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}